@if (Session["rol"] != null)
{
    if (Session["rol"].ToString().Equals("Administrador") || Session["rol"].ToString().Equals("Encargado de Planta") || Session["rol"].ToString().Equals("Asistente SIG - Operación") || Session["rol"].ToString().Equals("Encargado Fondo de Trabajo"))
    {
        @model SistemaIndicadoresAmbientales.Entity.ConsumoCombustible

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div id="Etiqueta">
                <h1 class="H1-Etiqueta">Registrar Consumo Combustible</h1>
            </div>
            <div class="col-md-3"></div>
            <div class="form-horizontal col-md-4">
                <div style="margin: 0 auto; width: 25%;">
                    @if (TempData["success"] != null)
                    {
                        TempData.Remove("success");
                        <spam class="text-success">Consumo registrado con exito!</spam>
                    }
                    @if (TempData["error"] != null)
                    {
                        TempData.Remove("error");
                        <spam class="text-danger">ERROR! No se ha completado el proceso.</spam>
                    }
                </div>

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.Label("Equipos Menores", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownList("eq_menores", ViewData["eq_menores"] as SelectList, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cant_combustible, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.cant_combustible, new { htmlAttributes = new { @class = "form-control col-md-2" } })
                        @Html.ValidationMessageFor(model => model.cant_combustible, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.factura, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.factura, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.factura, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fecha_factura, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.fecha_factura, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fecha_factura, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6"></div>
                    <div class="col-md-6">
                        <input type="submit" value="Guardar" class="btn btn-accept" />
                    </div>
                </div>
            </div>
            <div class="col-md-5"></div>
        }

        <div>
            @Html.ActionLink("Volver al Listado", "ListarConsumoCombustibleEqMenor")
        </div>
    }
    else
    {
        Response.Redirect("~/Home/Error", false);
    }//else
}
else
{
    Response.Redirect("~/Home/Error", false);
}